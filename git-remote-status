#!/bin/bash
#
# Check the current branch status compared to a remote branch.
#
# $1 = remote (defaults to the upstream repo)
# $2 = branch (defaults to the current branch name)

set -e  # stop on error


CONFIG_HUB_REPO_TYPE=$(git config --get hub.repo.type || echo "")
CONFIG_HUB_REMOTE_UPSTREAM=$(git config --get hub.remote.upstream || echo "")
CONFIG_BRANCH_MASTER_REMOTE=$(git config --get branch.master.remote || echo "")


if [[ $CONFIG_HUB_REPO_TYPE = "fork" ]]; then
  remote=${1:-$CONFIG_HUB_REMOTE_UPSTREAM}
else
  remote=${1:-${CONFIG_BRANCH_MASTER_REMOTE:-origin}}
fi
current=$(git symbolic-ref --short HEAD)
branch=${2-$current}


remote_branches=$(git ls-remote $remote)
num=$(echo "$remote_branches" | egrep "refs/heads/$branch\$" | wc -l)
if (( $num == 0 )); then
  echo "local is new"
  exit
fi

git remote update $remote > /dev/null

local_ref=$(git rev-parse $current)
remote_ref=$(git rev-parse $remote/$branch)
base_ref=$(git merge-base $current $remote/$branch)

if [ $local_ref = $remote_ref ]; then
    echo "local is up-to-date"
elif [ $local_ref = $base_ref ]; then
    echo "local is behind remote; need to pull"
elif [ $remote_ref = $base_ref ]; then
    echo "local is ahead of remote; need to push"
else
    echo "local and remote have diverged"
fi
